akka.loglevel = DEBUG
akka.persistence.journal.plugin="akka.persistence.cassandra.journal"
akka.persistence.journal.plugin="akka.persistence.journal.leveldb"
akka.persistence.max-concurrent-recoveries = 300

//akka {
//  persistence {
//    journal {
//      plugin = "akka.persistence.journal.leveldb"
//      leveldb {
//        dir = "target/levelDb/journal"
//        //   native = false # DO NOT USE THIS IN PRODUCTION !!!
//      }
//    }
//    snapshot-store {
//      plugin = "akka.persistence.snapshot-store.local"
//      local {
//        dir = "target/levelDb/snapshots"
//      }
//    }
//  }
//}
akka.actor.warn-about-java-serializer-usage = off
akka.actor.allow-java-serialization = on
akka.persistence.cassandra.journal.keyspace-autocreate=on
akka.persistence.cassandra.journal.tables-autocreate=on
akka.persistence.cassandra.snapshot.keyspace-autocreate=on
akka.persistence.cassandra.snapshot.tables-autocreate=on
datastax-java-driver {
  basic {
    contact-points = []
  }
  advanced {
    reconnect-on-init = true
  }
}

slick-postgres {
  profile = "slick.jdbc.PostgresProfile$"
  db {
    dataSourceClass = "slick.jdbc.DriverDataSource"
    properties = {
      driver = "org.postgresql.Driver"
            url = "jdbc:postgresql://localhost:5432/demo"
            user = "docker"
            password = "docker"
      //    url = "jdbc:postgresql://localhost:5432/testDb"
      //    user = "testDb"
      //    password = ""
    }
  }
}